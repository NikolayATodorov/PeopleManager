package com.nitdrv.peoplemanager.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EmailAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmailAllPropertiesEquals(Email expected, Email actual) {
        assertEmailAutoGeneratedPropertiesEquals(expected, actual);
        assertEmailAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmailAllUpdatablePropertiesEquals(Email expected, Email actual) {
        assertEmailUpdatableFieldsEquals(expected, actual);
        assertEmailUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmailAutoGeneratedPropertiesEquals(Email expected, Email actual) {
        assertThat(expected)
            .as("Verify Email auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmailUpdatableFieldsEquals(Email expected, Email actual) {
        assertThat(expected)
            .as("Verify Email relevant properties")
            .satisfies(e -> assertThat(e.getEmailType()).as("check emailType").isEqualTo(actual.getEmailType()))
            .satisfies(e -> assertThat(e.getEmail()).as("check email").isEqualTo(actual.getEmail()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmailUpdatableRelationshipsEquals(Email expected, Email actual) {
        assertThat(expected)
            .as("Verify Email relationships")
            .satisfies(e -> assertThat(e.getPerson()).as("check person").isEqualTo(actual.getPerson()));
    }
}
